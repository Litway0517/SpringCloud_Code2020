server:
  port: 8001

spring:
  application:
    name: cloud-payment-service
  datasource:
    # 当前数据源操作类型
    type: com.alibaba.druid.pool.DruidDataSource
    # mysql驱动包 com.mysql.jdbc.Driver
    driver-class-name: org.gjt.mm.mysql.Driver
    url: jdbc:mysql://localhost:3306/sgg-springcloud2020?useUnicode=true&characterEncoding=utf-8&useSSL=false
    username: root
    password: root

# 配置eureka
eureka:
  client:
    # 表名本微服务是否注册进入Eureka Server服务器, 当然设置为true. 如果设置为false那么Eureka注册中心就看不到这个微服务
    register-with-eureka: true
    # 是否从Eureka Server抓取已有的注册信息. 默认为true. 单节点无所谓, 而集群必须设置为true才能配合ribbon使用负载均衡
    fetch-registry: true
    service-url:
      # 本模块的微服务注册进入到Eureka Server服务端时, 注册的地址. 注意下面的地址并不是Eureka Server的主页地址.
      # defaultZone: http://localhost:7001/eureka/
      # 集群版注册方式
      defaultZone: http://eureka7001.com:7001/eureka,http://eureka7002.com:7002/eureka
  # 配置微服务的id
  instance:
    instance-id: payment8001
    # 修改ip地址的显示
    prefer-ip-address: true
    # 心跳检测与持续时间
    # 开发时设置小些, 保证服务关闭后注册中心能及时剔除服务
    # Eureka客户端向服务端发送心跳的时间间隔, 单位为秒(默认是30秒)
    lease-renewal-interval-in-seconds: 1
    # Eureka服务端在收到最后一次心跳后等待时间上限, 单位为秒(默认是90秒). 超时将剔除服务
    lease-expiration-duration-in-seconds: 2

mybatis:
  mapperLocations: classpath:mapper/*.xml
  # 所有Entity别名类所在包
  type-aliases-package: com.atguigu.springcloud.entities


